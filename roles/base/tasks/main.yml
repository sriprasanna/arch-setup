---

- name: check_if_archlinuxfr_present
  shell: cat /etc/pacman.conf | grep archlinuxfr
  register: archlinuxfr_repo_added
  ignore_errors: yes

- name: add_archlinuxfr_repo
  lineinfile: dest=/etc/pacman.conf state=present line="[archlinuxfr]\nSigLevel = Never\nServer = http://repo.archlinux.fr/$arch"
  when: "archlinuxfr_repo_added.rc != 0"

- name: check_if_multilib_enabled
  shell: cat /etc/pacman.conf | grep '^\[multilib\]'
  register: multilib_enabled
  ignore_errors: yes

- name: enable_multilib
  lineinfile: dest=/etc/pacman.conf state=present line="[multilib]\nInclude = /etc/pacman.d/mirrorlist"
  when: "multilib_enabled.rc != 0"

- name: update_cache
  pacman: update_cache=yes

- name: install_pacman_packages
  pacman: name={{ item }} state=present
  with_flattened:
    - pacman_packages

- name: create_group_admins
  group: name={{ username }} state=present

- name: create_user_{{ username }}
  user: name={{ username }} shell=/usr/bin/fish group={{ username }}

- name: add_admins_to_sudoers
  lineinfile: "dest=/etc/sudoers state=present regexp='^%{{ username }}' line='%{{ username }} ALL=(ALL) NOPASSWD: ALL'"

- name: check_if_yaourt_packages_are_already_installed
  command: pacman -Q {{item}}
  register: packages_presence
  with_items: yaourt_packages
  ignore_errors: yes
  changed_when: "packages_presence|failed"

- name: install_package_if_necessary
  command: yaourt -S {{item.item}} --noconfirm
  sudo_user: "{{ username }}"
  when: item|failed
  with_items: packages_presence.results

- name: set_services
  copy: src={{ item }}.service dest=/etc/systemd/system/{{ item }}.service mode=644
  with_flattened:
    - service_files

- name: enable_services
  service: name={{ item }} enabled=yes
  with_flattened:
    - enable_services

- name: start_services
  service: name={{ item }} state=started
  with_flattened:
    - start_services

- name: enable_fixtrackpad_services
  service: name=fixtrackpad@{{ username }} state=started enabled=yes

- name: set_mod_conf
  copy: src={{ item }}.conf dest=/etc/modprobe.d/{{ item }}.conf
  with_flattened:
    - modconf_files

- name: set_xorg_files
  copy: src={{ item }}.conf dest=/etc/X11/xorg.conf.d/{{ item }}.conf
  with_flattened:
    - xorg_files

- name: set_asound
  copy: src=asound.conf dest=/etc/asound.conf

- name: check_if_bootstrapped
  shell: cat /etc/mkinitcpio.conf | grep nouveau
  register: bootstrapped
  ignore_errors: yes

- include: bootstrap.yml
  when: "bootstrapped.rc != 0"

- name: update_mkinitcpio_conf
  copy: src=mkinitcpio.conf dest=/etc/mkinitcpio.conf

- name: update_intramfs_image
  command: mkinitcpio -p linux
